name: CI

on:
  push:
    branches:
      - development
  pull_request:
  workflow_dispatch:

jobs:
  black:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check source code formatting
        uses: psf/black@stable

      - name: Notify Slack
        uses: ravsamhq/notify-slack-action@v2
        if: always()
        with:
          status: ${{ job.status }}
          notification_title: ""
          message_format: "{emoji} <{run_url}|Workflow *{workflow}* {status_message}> in <{branch_url}|{repo}> on <{commit_url}|`{commit_sha}`>"
          footer: ""
          notify_when: "failure"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_NOTIFICATIONS_WEBHOOK_URL }}

  ruff:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run ruff linter
        uses: chartboost/ruff-action@v1

      - name: Notify Slack
        uses: ravsamhq/notify-slack-action@v2
        if: always()
        with:
          status: ${{ job.status }}
          notification_title: ""
          message_format: "{emoji} <{run_url}|Workflow *{workflow}* {status_message}> in <{branch_url}|{repo}> on <{commit_url}|`{commit_sha}`>"
          footer: ""
          notify_when: "failure"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_NOTIFICATIONS_WEBHOOK_URL }}

  pytest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python project and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]

      - name: Run pytest
        id: pytest
        run: pytest

      - name: Notify Slack
        uses: ravsamhq/notify-slack-action@v2
        if: always()
        with:
          status: ${{ job.status }}
          notification_title: ""
          message_format: "{emoji} <{run_url}|Workflow *{workflow}* {status_message}> in <{branch_url}|{repo}> on <{commit_url}|`{commit_sha}`>"
          footer: ""
          notify_when: "failure"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_NOTIFICATIONS_WEBHOOK_URL }}

  sphinx:
    runs-on: ubuntu-latest
    needs: pytest # build documentation only when all tests pass

    steps:
      - name: Checkout repo
        uses: actions/checkout@v1

      - name: Build sphinx
        uses: ammaraskar/sphinx-action@master
        with:
          docs-folder: "docs/"

      - name: Commit documentation changes
        run: |
          git clone https://github.com/qubrabench/qubrabench.git --branch gh-pages --single-branch gh-pages
          cp -r docs/_build/html/* gh-pages/
          cd gh-pages
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Update documentation" -a || true
          # The above command will fail if no changes were present, so we ignore
          # the return code.

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          branch: gh-pages
          directory: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}