from qubrabench.utils.plotting_strategy import PlottingStrategy


class HillClimberPlottingStrategy(PlottingStrategy):
    """
    Plot data generated by hill-climb vs Cade et al.

    Example:

        bench_hillclimber.py plot results.json
    """

    def __init__(self):
        self.colors["QuBRA"] = "blue"
        self.colors["Cade"] = "orange"

    def get_x_label(self):
        return "$n$"

    def get_y_label(self):
        return "Queries"

    def columns_to_group_for_plots(self):
        return ["k", "r"]

    def columns_to_group_in_a_plot(self):
        return ["impl"]

    def compute_aggregates(self, data, *, quantum_factor):
        # compute combined query costs of quantum search
        c = data["quantum_expected_classical_queries"]
        q = data["quantum_expected_quantum_queries"]
        data["quantum_cost"] = c + quantum_factor * q
        return data

    def get_x_axis_column(self):
        return "n"

    def columns_to_plot(self):
        return {
            "classical_actual_queries": ("Classical Queries", "o"),
            "quantum_cost": ("Quantum Queries", "x"),
        }
